---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &appname tailscale-operator
  namespace: networking
spec:
  interval: 30m
  chart:
    spec:
      chart: tailscale-operator
      version: 1.56.1
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: tailscale-charts
        namespace: flux-system
  values:
    apiServerProxyConfig:
      mode: "true"
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: operator
#   namespace: networking
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: operator
#   strategy:
#     type: Recreate
#   template:
#     metadata:
#       labels:
#         app: operator
#     spec:
#       containers:
#         - env:
#             - name: OPERATOR_INITIAL_TAGS
#               value: tag:k8s-operator
#             - name: OPERATOR_HOSTNAME
#               value: tailscale-operator
#             - name: OPERATOR_SECRET
#               value: operator
#             - name: OPERATOR_LOGGING
#               value: info
#             - name: OPERATOR_NAMESPACE
#               valueFrom:
#                 fieldRef:
#                   fieldPath: metadata.namespace
#             - name: CLIENT_ID_FILE
#               value: /oauth/client_id
#             - name: CLIENT_SECRET_FILE
#               value: /oauth/client_secret
#             - name: PROXY_IMAGE
#               value: tailscale/tailscale:unstable
#             - name: PROXY_TAGS
#               value: tag:k8s
#             - name: APISERVER_PROXY
#               value: "false"
#             - name: PROXY_FIREWALL_MODE
#               value: auto
#           image: tailscale/k8s-operator:unstable
#           imagePullPolicy: Always
#           name: operator
#           volumeMounts:
#             - mountPath: /oauth
#               name: oauth
#               readOnly: true
#       nodeSelector:
#         kubernetes.io/os: linux
#       serviceAccountName: operator
#       volumes:
#         - name: oauth
#           secret:
#             secretName: operator-oauth
